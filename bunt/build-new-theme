#!/bin/bash
DIR=$HOME/.config/bunt
GET_WALLPAPER=true
BACKEND=haishoku
RESTART_SPOTIFY=true
TAG=

while test $# -gt 0; do
    case "$1" in
        -h|--help)
            echo "Usage..."
            exit 0
            ;;
        -b|--backend)
            shift
            if test $# -gt 0; then
                case "$1" in
                    haishoku)
                        BACKEND=haishoku ;;
                    schemer|schemer2)
                        BACKEND=schemer2 ;;
                    colorz) BACKEND=colorz ;;
                    wal)
                        BACKEND=wal ;;
                    colorthief)
                        BACKEND=colorthief ;;
                    *)
                        echo "Unknown backend, proceeding with haishoku backend..."
                        BACKEND=haishoku ;;
                esac
            else
                echo "No backend specified! Aborting..."
                exit 1
            fi
            shift
            ;;
        -t|--tag)
            shift
            if test $# -gt 0; then
                TAG="$1"
            else
                "No search tag specified! Aborting..."
                exit 1
            fi
            shift
            ;;
        -s|--skip-spotify-restart)
            shift
            RESTART_SPOTIFY=false ;;
        *)
            break
            ;;
    esac
done

if [ ! $# -eq 0 ]; then
    if [ ! -f "$1" ]; then
        echo "$1 is not a file! Aborting..."
        exit 1
    fi

    cp "$1" "$DIR/wallpaper"

    wal -i "$DIR/wallpaper" --backend "$BACKEND"

    if [ ! $TERM = "screen-256color" ]; then imgcat --height 10 $DIR/wallpaper; fi

else
    while [ "$GET_WALLPAPER" == "true" ]
    do # fetch random wallpaper from unsplash
        echo -n "Fetching a random wallpaper..."
        wget -O "$DIR/temp" https://source.unsplash.com/random/1920x1080/?$TAG >/dev/null 2>&1
        echo " ✔️"

        # temporary fix
        # i have no idea why but downloading directly into $DIR/wallpaper can break things
        # even if all the caches (wal/wallpaper file/macos wallpaper db) are cleared.
        # i have absolutely no idea why this is happening and i am tearing my hair out
        cp "$DIR/temp" "$DIR/wallpaper"
        rm "$DIR/temp"

        # generate colors palette, skip setting wallpaper
        echo "Generating colours..."
        wal -q -i "$DIR/wallpaper" --backend "$BACKEND" > /dev/null 2>&1
        wal --preview

        if [ ! $TERM = "screen-256color" ]; then imgcat --height 10 $DIR/wallpaper; fi

        while true; do
            echo "Are you happy with this theme?"
            read -p "" yn
            case $yn in
                [Yy]* ) GET_WALLPAPER=false; break;;
                [Nn]* ) GET_WALLPAPER=true; break;;
                * ) echo "Please answer yes or no.";;
            esac
        done
    done
fi

#clear neofetch cache
neofetch --clean > /dev/null

#apply to discord
#run pywal-discord-fix if this isn't working
echo -n "Applying new theme to discord..."
pywal-discord
echo " ✔️"

#apply to spotify
echo -n "Applying new theme to spotify..."
echo " ✔️"

if ! pgrep "Spotify" 1>/dev/null; then
    RESTART_SPOTIFY=false #always skip if spotify not running
fi

if [ "$RESTART_SPOTIFY" == "false" ]; then
    echo "Skipping spotify restart!"
    spicetify apply -n
else
    echo "Restarting spotify!"
    #grab spotify space, add rule and remove rule once window exists
    #this isn't perfect but good enough for now
    #might eventually be replaced with a dedicated spotify space anyway
    SPOTIFY_SPACE=$(yabai -m query --windows | jq -c '.[] | select(.app == "Spotify").space')
    yabai -m rule --add app="Spotify" space=$SPOTIFY_SPACE label="spotify_restart"
    spicetify apply
    echo "Waiting for spotify to re-open. If this doesn't happen automatically, please relaunch spotify now."
    while [[ ! $(yabai -m query --windows | jq -c '.[] | select(.app == "Spotify")') ]]; do
        sleep 0.01
    done
    yabai -m rule --remove "spotify_restart"
fi

#quit xquartz after applying spotify theme
echo -n "Quitting XQuartz..."
#surpress stderr because we don't care if no process was found
killall -m Xquartz 2>/dev/null
echo " ✔️"


echo "You may need to fetch pywal colors in firefox."
echo "If the new discord theme didn't apply run pywal-discord-fix."

