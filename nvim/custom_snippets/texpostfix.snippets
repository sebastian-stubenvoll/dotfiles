global !p
def math():
  return vim.eval('vimtex#syntax#in_mathzone()') == 1
endglobal


priority 10
context "math()"
snippet "BAR" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)BAR" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "HAT" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])HAT" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "ddot" "derivative dot" riA
\dot{$1}$0
endsnippet

priority 50
context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)ddot" "derivative dot" riA
\dot{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)d\ddot" "derivative dot" riA
`!p
n = int(match.group(0)[-4])
s = n*'d'
final_str = '\\'+s+'ot{'+match.group(1)+'}'
snip.rv=final_str
`
endsnippet

priority 100
context "math()"
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet 

#priority 100
#context "math()"
#snippet '([A-Za-z])(\d)' "auto subscript" wrA
#`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
#endsnippet

priority 100
context "math()"
snippet '([A-Za-z])_' "auto subscript" riA
`!p snip.rv = match.group(1)`_{$1}$0
endsnippet
